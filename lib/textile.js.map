{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 0f011c69e84bb8094757","webpack:///./src/index.js","webpack:///./src/merge.js","webpack:///./src/jsonml.js","webpack:///./src/html.js","webpack:///./src/re.js","webpack:///./src/ribbon.js","webpack:///./src/textile/flow.js","webpack:///./src/builder.js","webpack:///./src/fixlinks.js","webpack:///./src/textile/phrase.js","webpack:///./src/textile/attr.js","webpack:///./src/textile/glyph.js","webpack:///./src/textile/re_ext.js","webpack:///./src/textile/list.js","webpack:///./src/textile/deflist.js","webpack:///./src/textile/table.js"],"names":["merge","require","toHTML","parseFlow","parseHtml","textile","txt","opt","defaults","lineOffset","map","join","module","exports","setOptions","setoptions","parse","convert","html_parser","jsonml","concat","serialize","a","b","k","singletons","reIndent","ml","shiftBy","s","test","slice","i","Array","isArray","escape","text","escapeQuotes","replace","tag","shift","attributes","tagAttrs","content","length","push","String","indexOf","re","ribbon","pattern","html_id","html_attr","reAttr","compile","reComment","reEndTag","reTag","reHtmlTagBlock","area","base","br","col","embed","hr","img","input","link","meta","option","param","wbr","allowAll","testComment","src","exec","testOpenTagBlock","testOpenTag","testCloseTag","parseHtmlAttr","attrSrc","attr","m","OPEN","CLOSE","SINGLE","TEXT","COMMENT","WS","tokenize","whitelistTags","lazy","tokens","textMode","oktag","oktag_","nesting","nestCount","type","data","pos","index","advance","token","isNaN","valueOf","root","stack","curr","elm","head","splice","sourceLength","_cache","collapse","expandPatterns","ex","Error","isRegExp","r","Object","prototype","toString","call","flags","arguments","global","ignoreCase","multiline","source","ckey","rx","RegExp","feed","org","slot","self","save","getSlot","getPos","load","n","skipWS","ws","lookbehind","nchars","startsWith","substring","builder","fixLinks","parsePhrase","copyAttr","parseAttr","addLineNumber","testList","parseList","testDefList","parseDefList","testTable","parseTable","txblocks","txlisthd","txattr","allowedBlocktags","reBlock","reBlockNormal","reBlockExtended","reBlockNormalPre","reBlockExtendedPre","reRuler","reLinkRef","reFootnoteDef","reCleanBegin","hasOwn","hasOwnProperty","extend","target","args","nextKey","paragraph","pba","linebreak","options","out","split","forEach","bit","trim","computeCharOffset","showOriginalLineNumber","removedSrc","match","storeCharPosToLine","charOffset","charPosToLine","realSrc","list","linkRefs","charLineOffset","blockType","extended","reBlockGlob","inner","cite","par","add","subPba","fnid","class","id","t","p","x","pop","innerHTML","isBlock","innerElm","breaks","get","initArr","arr","node","filter","undefined","l","dict","href","parseGlyph","ucaps","txcite","phraseConvert","rePhrase","reImage","reImageFenced","reCaps","reLink","reLinkFenced","reLinkTitle","reFootnote","behind","boundary","tok","fence","phraseType","code","mMid","mEnd","t1","charAt","alt","title","single","element","caps","reClassid","rePaddingL","rePaddingR","reAlignBlock","reAlignImg","reVAlign","reColSpan","reRowSpan","reStyles","reCSS","reLang","pbaAlignLookup","pbaVAlignLookup","blacklist","d","testBlock","name","endToken","st","o","remaining","isImg","isList","isPhrase","reAlign","rm","bits","align","v","style","jsonmlEntryAttr","charPos","cssClassOriginalLineNumber","reApostrophe","reArrow","reClosingDQuote","reClosingSQuote","reCopyright","reDimsign","reDoublePrime","reEllipsis","reEmdash","reEndash","reOpenDQuote","reOpenSQuote","reRegistered","reSinglePrime","reTrademark","attr_class","attr_style","attr_lang","attr_align","attr_pad","reList","reItem","listPad","currIndex","lastIndex","_lst","itemIndex","listAttr","item","destLevel","substr","newLi","lst","isFinite","parseInt","li","ul","att","start","apply","reDeflist","deflist","terms","def","localCharOffset","separators","term","reTable","reHead","reRow","reCaption","reColgroup","reRowgroup","charToTag","parseColgroup","colgroup","isCol","span","width","rowgroups","caption","tAttr","tCurr","row","more","setRowGroup","summary","th","cell","mx","table","tbody"],"mappings":"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","file":"textile.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"textile\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"textile\"] = factory();\n\telse\n\t\troot[\"textile\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0f011c69e84bb8094757","/*\n** Textile parser for JavaScript\n**\n** Copyright (c) 2012 Borgar Þorsteinsson (MIT License).\n**\n*/\n\nconst merge = require( './merge' );\nconst { toHTML } = require( './jsonml' );\nconst { parseFlow } = require( './textile/flow' );\nconst { parseHtml } = require( './html' );\n\nfunction textile ( txt, opt ) {\n  // get a throw-away copy of options\n  opt = merge( merge({}, textile.defaults ), opt || {});\n  // run the converter\n  return parseFlow( txt, opt, opt.lineOffset ).map( toHTML ).join( '' );\n};\nmodule.exports = textile;\n\n// options\ntextile.defaults = {\n  // single-line linebreaks are converted to <br> by default\n  'breaks': true,\n  // by default, don't map the elements of HTML output, with the line numbers of input text\n  'showOriginalLineNumber': false,\n  // line number offset of the first char of input text, for showOriginalLineNumber option\n  'lineOffset': 0,\n  // by default, don't set a special CSS class name to each HTML element mapped to an original line number\n  'cssClassOriginalLineNumber': ''\n};\ntextile.setOptions = textile.setoptions = function ( opt ) {\n  merge( textile.defaults, opt );\n  return this;\n};\n\ntextile.parse = textile.convert = textile;\ntextile.html_parser = parseHtml;\n\ntextile.jsonml = function ( txt, opt ) {\n  // get a throw-away copy of options\n  opt = merge( merge({}, textile.defaults ), opt || {});\n  // parse and return tree\n  return [ 'html' ].concat( parseFlow( txt, opt, opt.lineOffset ) );\n};\ntextile.serialize = toHTML;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// merge object b properties into object a\nmodule.exports = function merge ( a, b ) {\n  if ( b ) {\n    for ( const k in b ) {\n      a[ k ] = b[ k ];\n    }\n  }\n  return a;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/merge.js","/*\n** JSONML helper methods - http://www.jsonml.org/\n**\n** This provides the `JSONML` object, which contains helper\n** methods for rendering JSONML to HTML.\n**\n** Note that the tag ! is taken to mean comment, this is however\n** not specified in the JSONML spec.\n*/\n\nconst singletons = require( './html' ).singletons;\n\n// drop or add tab levels to JsonML tree\nfunction reIndent ( ml, shiftBy ) {\n  // a bit obsessive, but there we are...\n  if ( !shiftBy ) {\n    return ml;\n  }\n  return ml.map( function ( s ) {\n    if ( /^\\n\\t+/.test( s ) ) {\n      if ( shiftBy < 0 ) {\n        s = s.slice( 0, shiftBy );\n      }\n      else {\n        for ( let i = 0; i < shiftBy; i++ ) {\n          s += '\\t';\n        }\n      }\n    }\n    else if ( Array.isArray( s ) ) {\n      return reIndent( s, shiftBy );\n    }\n    return s;\n  });\n}\n\nfunction escape ( text, escapeQuotes ) {\n  return text.replace( /&(?!(#\\d{2,}|#x[\\da-fA-F]{2,}|[a-zA-Z][a-zA-Z1-4]{1,6});)/g, '&amp;' )\n             .replace( /</g, '&lt;' )\n             .replace( />/g, '&gt;' )\n             .replace( /\"/g, escapeQuotes ? '&quot;' : '\"' )\n             .replace( /'/g, escapeQuotes ? '&#39;' : \"'\" );\n}\n\nfunction toHTML ( jsonml ) {\n  jsonml = jsonml.concat();\n\n  // basic case\n  if ( typeof jsonml === 'string' ) {\n    return escape( jsonml );\n  }\n\n  const tag = jsonml.shift();\n  let attributes = {};\n  let tagAttrs = '';\n  const content = [];\n\n  if ( jsonml.length && typeof jsonml[0] === 'object' && !Array.isArray( jsonml[0] ) ) {\n    attributes = jsonml.shift();\n  }\n\n  while ( jsonml.length ) {\n    content.push( toHTML( jsonml.shift() ) );\n  }\n\n  for ( const a in attributes ) {\n    tagAttrs += ( attributes[a] == null )\n            ? ` ${ a }`\n            : ` ${ a }=\"${ escape( String( attributes[a] ), true ) }\"`;\n  }\n\n  // be careful about adding whitespace here for inline elements\n  if ( tag === '!' ) {\n    return `<!--${ content.join( '' ) }-->`;\n  }\n  else if ( tag in singletons || ( tag.indexOf( ':' ) > -1 && !content.length ) ) {\n    return `<${ tag }${ tagAttrs } />`;\n  }\n  else {\n    return `<${ tag }${ tagAttrs }>${ content.join( '' ) }</${ tag }>`;\n  }\n}\n\nmodule.exports = {\n  reIndent: reIndent,\n  toHTML: toHTML,\n  escape: escape\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/jsonml.js","const re = require( './re' );\nconst ribbon = require( './ribbon' );\n\nre.pattern.html_id = '[a-zA-Z][a-zA-Z\\\\d:]*';\nre.pattern.html_attr = '(?:\"[^\"]+\"|\\'[^\\']+\\'|[^>\\\\s]+)';\n\nconst reAttr = re.compile( /^\\s*([^=\\s]+)(?:\\s*=\\s*(\"[^\"]+\"|'[^']+'|[^>\\s]+))?/ );\nconst reComment = re.compile( /^<!--(.+?)-->/, 's' );\nconst reEndTag = re.compile( /^<\\/([:html_id:])([^>]*)>/ );\nconst reTag = re.compile( /^<([:html_id:])((?:\\s[^=\\s\\/]+(?:\\s*=\\s*[:html_attr:])?)+)?\\s*(\\/?)>/ );\nconst reHtmlTagBlock = re.compile( /^\\s*<([:html_id:](?::[a-zA-Z\\d]+)*)((?:\\s[^=\\s\\/]+(?:\\s*=\\s*[:html_attr:])?)+)?\\s*(\\/?)>/ );\n\nconst singletons = {\n  area: 1,\n  base: 1,\n  br: 1,\n  col: 1,\n  embed: 1,\n  hr: 1,\n  img: 1,\n  input: 1,\n  link: 1,\n  meta: 1,\n  option: 1,\n  param: 1,\n  wbr: 1\n};\n\nfunction allowAll () {\n  return true;\n}\n\nfunction testComment ( src ) {\n  return reComment.exec( src );\n}\n\nfunction testOpenTagBlock ( src ) {\n  return reHtmlTagBlock.exec( src );\n}\n\nfunction testOpenTag ( src ) {\n  return reTag.exec( src );\n}\n\nfunction testCloseTag ( src ) {\n  return reEndTag.exec( src );\n}\n\nfunction parseHtmlAttr ( attrSrc ) {\n  // parse ATTR and add to element\n  const attr = {};\n  let m;\n  while ( ( m = reAttr.exec( attrSrc ) ) ) {\n    attr[ m[1] ] = ( typeof m[2] === 'string' ) ? m[2].replace( /^([\"'])(.*)\\1$/, '$2' ) : null;\n    attrSrc = attrSrc.slice( m[0].length );\n  }\n  return attr;\n}\n\nconst OPEN = 'OPEN';\nconst CLOSE = 'CLOSE';\nconst SINGLE = 'SINGLE';\nconst TEXT = 'TEXT';\nconst COMMENT = 'COMMENT';\nconst WS = 'WS';\n\nfunction tokenize ( src, whitelistTags, lazy ) {\n  const tokens = [];\n  let textMode = false;\n  let oktag = whitelistTags ? ( tag ) => tag in whitelistTags : allowAll;\n  const oktag_ = oktag;\n  const nesting = {};\n  let nestCount = 0;\n  let m;\n\n  src = ribbon( String( src ) );\n\n  do {\n    // comment\n    if ( ( m = testComment( src ) ) && oktag( '!' ) ) {\n      tokens.push({\n        type: COMMENT,\n        data: m[1],\n        pos: src.index(),\n        src: m[0]\n      });\n      src.advance( m[0] );\n    }\n\n    // end tag\n    else if ( ( m = testCloseTag( src ) ) && oktag( m[1] ) ) {\n      const token = {\n        type: CLOSE,\n        tag: m[1],\n        pos: src.index(),\n        src: m[0]\n      };\n      src.advance( m[0] );\n      tokens.push( token );\n      nesting[token.tag]--;\n      nestCount--;\n      // console.log( '/' + token.tag, nestCount, nesting );\n      if ( lazy && (\n          !nestCount ||\n          !nesting[token.tag] < 0 ||\n          isNaN( nesting[token.tag] )\n        ) ) {\n        return tokens;\n      }\n      // if parse is in text mode then that ends here\n      if ( textMode ) {\n        textMode = null;\n        oktag = oktag_;\n      }\n    }\n\n    // open/void tag\n    else if ( ( m = testOpenTag( src ) ) && oktag( m[1] ) ) {\n      const token = {\n        type: m[3] || m[1] in singletons ? SINGLE : OPEN,\n        tag: m[1],\n        pos: src.index(),\n        src: m[0]\n      };\n      if ( m[2] ) {\n        token.attr = parseHtmlAttr( m[2] );\n      }\n      // some elements can move parser into \"text\" mode\n      if ( m[1] === 'script' || m[1] === 'code' || m[1] === 'style' ) {\n        textMode = token.tag;\n        oktag = tag => tag === textMode;\n      }\n      if ( token.type === OPEN ) {\n        nestCount++;\n        nesting[token.tag] = ( nesting[token.tag] || 0 ) + 1;\n        // console.log( token.tag, nestCount, nesting );\n      }\n      tokens.push( token );\n      src.advance( m[0] );\n    }\n\n    // text content\n    else {\n      // no match, move by all \"uninteresting\" chars\n      m = /([^<]+|[^\\0])/.exec( src );\n      if ( m ) {\n        tokens.push({\n          type: TEXT,\n          data: m[0],\n          pos: src.index(),\n          src: m[0]\n        });\n      }\n      src.advance( m ? m[0].length || 1 : 1 );\n    }\n  }\n  while ( src.valueOf() );\n\n  return tokens;\n}\n\n// This \"indesciminately\" parses HTML text into a list of JSON-ML element\n// No steps are taken however to prevent things like <table><p><td> - user can still create nonsensical but \"well-formed\" markup\nfunction parse ( tokens, lazy ) {\n  const root = [];\n  const stack = [];\n  let curr = root;\n  let token;\n  for ( let i = 0; i < tokens.length; i++ ) {\n    token = tokens[i];\n    if ( token.type === COMMENT ) {\n      curr.push( [ '!', token.data ] );\n    }\n    else if ( token.type === TEXT || token.type === WS ) {\n      curr.push( token.data );\n    }\n    else if ( token.type === SINGLE ) {\n      curr.push( token.attr ? [ token.tag, token.attr ] : [ token.tag ] );\n    }\n    else if ( token.type === OPEN ) {\n      // TODO: some things auto close other things: <td>, <li>, <p>, <table>\n      // https://html.spec.whatwg.org/multipage/syntax.html#syntax-tag-omission\n      const elm = token.attr ? [ token.tag, token.attr ] : [ token.tag ];\n      curr.push( elm );\n      stack.push( elm );\n      curr = elm;\n    }\n    else if ( token.type === CLOSE ) {\n      if ( stack.length ) {\n        for ( let i = stack.length - 1; i >= 0; i-- ) {\n          const head = stack[i];\n          if ( head[0] === token.tag ) {\n            stack.splice( i );\n            curr = stack[stack.length - 1] || root;\n            break;\n          }\n        }\n      }\n      if ( !stack.length && lazy ) {\n        root.sourceLength = token.pos + token.src.length;\n        return root;\n      }\n    }\n  }\n  root.sourceLength = token ? token.pos + token.src.length : 0;\n  return root;\n}\n\nmodule.exports = {\n  singletons: singletons,\n  tokenize: tokenize,\n  parseHtml: parse,\n  parseHtmlAttr: parseHtmlAttr,\n  testCloseTag: testCloseTag,\n  testOpenTagBlock: testOpenTagBlock,\n  testOpenTag: testOpenTag,\n  testComment: testComment\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/html.js","/*\n** Regular Expression helper methods\n**\n** This provides the `re` object, which contains several helper\n** methods for working with big regular expressions (soup).\n**\n*/\n\nconst _cache = {};\n\nconst re = module.exports = {\n\n  pattern: {\n    'punct': '[!-/:-@\\\\[\\\\\\\\\\\\]-`{-~]',\n    'space': '\\\\s'\n  },\n\n  escape: function ( src ) {\n    return src.replace( /[\\-\\[\\]\\{\\}\\(\\)\\*\\+\\?\\.,\\\\\\^\\$\\|#\\s]/g, '\\\\$&' );\n  },\n\n  collapse: function ( src ) {\n    return src.replace( /(?:#.*?(?:\\n|$))/g, '' )\n              .replace( /\\s+/g, '' );\n  },\n\n  expandPatterns: function ( src ) {\n    // TODO: provide escape for patterns: \\[:pattern:] ?\n    return src.replace( /\\[:\\s*(\\w+)\\s*:\\]/g, function ( m, k ) {\n      const ex = re.pattern[k];\n      if ( ex ) {\n        return re.expandPatterns( ex );\n      }\n      else {\n        throw new Error( 'Pattern ' + m + ' not found in ' + src );\n      }\n    });\n  },\n\n  isRegExp: function ( r ) {\n    return Object.prototype.toString.call( r ) === '[object RegExp]';\n  },\n\n  compile: function ( src, flags ) {\n    if ( re.isRegExp( src ) ) {\n      if ( arguments.length === 1 ) { // no flags arg provided, use the RegExp one\n        flags = ( src.global ? 'g' : '' ) +\n                ( src.ignoreCase ? 'i' : '' ) +\n                ( src.multiline ? 'm' : '' );\n      }\n      src = src.source;\n    }\n    // don't do the same thing twice\n    const ckey = src + ( flags || '' );\n    if ( ckey in _cache ) {\n      return _cache[ ckey ];\n    }\n    // allow classes\n    let rx = re.expandPatterns( src );\n    // allow verbose expressions\n    if ( flags && /x/.test( flags ) ) {\n      rx = re.collapse( rx );\n    }\n    // allow dotall expressions\n    if ( flags && /s/.test( flags ) ) {\n      rx = rx.replace( /([^\\\\])\\./g, '$1[^\\\\0]' );\n    }\n    // TODO: test if MSIE and add replace \\s with [\\s\\u00a0] if it is?\n    // clean flags and output new regexp\n    flags = ( flags || '' ).replace( /[^gim]/g, '' );\n    return ( _cache[ ckey ] = new RegExp( rx, flags ) );\n  }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/re.js","module.exports = function ribbon ( feed ) {\n  const org = String( feed );\n  let slot;\n  let pos = 0;\n  const self = {\n\n    index: () => {\n      return pos;\n    },\n\n    save: () => {\n      slot = pos;\n      return self;\n    },\n\n    getSlot: () => {\n      return slot || 0;\n    },\n\n    getPos: () => {\n      return pos || 0;\n    },\n\n    load: () => {\n      pos = slot;\n      feed = org.slice( pos );\n      return self;\n    },\n\n    advance: n => {\n      pos += ( typeof n === 'string' ) ? n.length : n;\n      feed = org.slice( pos );\n      return feed;\n    },\n\n    skipWS: () => {\n      const ws = /^\\s+/.exec( feed );\n      if ( ws ) {\n        pos += ws[0].length;\n        feed = org.slice( pos );\n        return ws[0];\n      }\n      return '';\n    },\n\n    lookbehind: nchars => {\n      nchars = nchars == null ? 1 : nchars;\n      return org.slice( pos - nchars, pos );\n    },\n\n    startsWith: s => {\n      return feed.substring( 0, s.length ) === s;\n    },\n\n    slice: ( a, b ) => {\n      return b != null ? feed.slice( a, b ) : feed.slice( a );\n    },\n\n    valueOf: () => {\n      return feed;\n    },\n\n    toString: () => {\n      return feed;\n    }\n\n  };\n\n  return self;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/ribbon.js","/*\n** textile flow content parser\n*/\nconst builder = require( '../builder' );\nconst ribbon = require( '../ribbon' );\nconst re = require( '../re' );\nconst fixLinks = require( '../fixlinks' );\n\nconst { parseHtml, tokenize, parseHtmlAttr, singletons, testComment, testOpenTagBlock } = require( '../html' );\n\nconst { parsePhrase } = require( './phrase' );\nconst { copyAttr, parseAttr, addLineNumber } = require( './attr' );\nconst { testList, parseList } = require( './list' );\nconst { testDefList, parseDefList } = require( './deflist' );\nconst { testTable, parseTable } = require( './table' );\n\nconst { txblocks, txlisthd, txattr } = require( './re_ext' );\nre.pattern.txblocks = txblocks;\nre.pattern.txlisthd = txlisthd;\nre.pattern.txattr = txattr;\n\n// HTML tags allowed in the document (root) level that trigger HTML parsing\nconst allowedBlocktags = {\n  'p': 0,\n  'hr': 0,\n  'ul': 1,\n  'ol': 0,\n  'li': 0,\n  'div': 1,\n  'pre': 0,\n  'object': 1,\n  'script': 0,\n  'noscript': 0,\n  'blockquote': 1,\n  'notextile': 1\n};\n\nconst reBlock = re.compile( /^([:txblocks:])/ );\nconst reBlockNormal = re.compile( /^(.*?)($|\\r?\\n(?=[:txlisthd:])|\\r?\\n(?:\\s*\\n|$)+)/, 's' );\nconst reBlockExtended = re.compile( /^(.*?)($|\\r?\\n(?=[:txlisthd:])|\\r?\\n+(?=[:txblocks:][:txattr:]\\.))/, 's' );\nconst reBlockNormalPre = re.compile( /^(.*?)($|\\r?\\n(?:\\s*\\n|$)+)/, 's' );\nconst reBlockExtendedPre = re.compile( /^(.*?)($|\\r?\\n+(?=[:txblocks:][:txattr:]\\.))/, 's' );\n\nconst reRuler = /^(\\-\\-\\-+|\\*\\*\\*+|___+)(\\r?\\n\\s+|$)/;\nconst reLinkRef = re.compile( /^\\[([^\\]]+)\\]((?:https?:\\/\\/|\\/)\\S+)(?:\\s*\\n|$)/ );\nconst reFootnoteDef = /^fn\\d+$/;\n\nconst reCleanBegin = /^( *\\r?\\n)+/;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\nfunction extend ( target, ...args ) {\n  for ( let i = 1; i < args.length; i++ ) {\n    const src = args[i];\n    if ( src != null ) {\n      for ( const nextKey in src ) {\n        if ( hasOwn.call( src, nextKey ) ) {\n          target[nextKey] = src[nextKey];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nfunction paragraph ( s, tag, pba, linebreak, options ) {\n  tag = tag || 'p';\n  let out = [];\n  s.split( /(?:\\r?\\n){2,}/ ).forEach( function ( bit, i ) {\n    if ( tag === 'p' && /^\\s/.test( bit ) ) {\n      // no-paragraphs\n      bit = bit.replace( /\\r?\\n[\\t ]/g, ' ' ).trim();\n      out = out.concat( parsePhrase( bit, options ) );\n    }\n    else {\n      if ( linebreak && i ) { out.push( linebreak ); }\n      out.push( pba ? [ tag, pba ].concat( parsePhrase( bit, options ) )\n                    : [ tag ].concat( parsePhrase( bit, options ) ) );\n    }\n  });\n  return out;\n};\n\nfunction computeCharOffset ( src, options, lineOffset ) {\n  if ( options.showOriginalLineNumber ) {\n    lineOffset = lineOffset || 0;\n\n    const removedSrc = src.match( reCleanBegin );\n    if ( removedSrc && removedSrc[0] ) {\n      lineOffset += ( removedSrc[0].match( /\\n/g ) || [] ).length;\n    }\n    return lineOffset;\n  }\n  else {\n    return 0;\n  }\n}\n\nfunction storeCharPosToLine ( src, options, charOffset ) {\n  // FIXME: don't store all chr ?\n  if ( options.showOriginalLineNumber ) {\n    const charPosToLine = [];\n    const realSrc = src.toString();\n    for ( const i in realSrc ) {\n      charPosToLine[ i ] = charOffset;\n      if ( realSrc[ i ] === '\\n' ) {\n        charOffset++;\n      }\n    }\n    return charPosToLine;\n  }\n  else {\n    return void 0;\n  }\n}\n\nfunction parseFlow ( src, options, lineOffset ) {\n  const list = builder();\n\n  let linkRefs;\n  let m;\n\n  // keep as local variable, for nested calls (->block HTML)\n  const charLineOffset = computeCharOffset( src, options, lineOffset );\n\n  src = ribbon( src.replace( reCleanBegin, '' ) );\n\n  // keep as local variable, for nested calls (->block HTML)\n  const charPosToLine = storeCharPosToLine( src, options, charLineOffset );\n\n  // loop\n  while ( src.valueOf() ) {\n    src.save();\n\n    // link_ref -- this goes first because it shouldn't trigger a linebreak\n    if ( ( m = reLinkRef.exec( src ) ) ) {\n      if ( !linkRefs ) { linkRefs = {}; }\n      src.advance( m[0] );\n      linkRefs[m[1]] = m[2];\n      continue;\n    }\n\n    // add linebreak\n    list.linebreak();\n\n    // named block\n    if ( ( m = reBlock.exec( src ) ) ) {\n      src.advance( m[0] );\n      const blockType = m[0];\n      let pba = parseAttr( src, blockType );\n\n      if ( pba ) {\n        src.advance( pba[0] );\n        pba = pba[1];\n      }\n      pba = addLineNumber( pba, options, charPosToLine, 0, src.getSlot() );\n      if ( ( m = /^\\.(\\.?)(?:\\s|(?=:))/.exec( src ) ) ) {\n        // FIXME: this whole copyAttr seems rather strange?\n        // slurp rest of block\n        const extended = !!m[1];\n        let reBlockGlob = ( extended ? reBlockExtended : reBlockNormal );\n        if ( blockType === 'bc' || blockType === 'pre' ) {\n          reBlockGlob = ( extended ? reBlockExtendedPre : reBlockNormalPre );\n        }\n        m = reBlockGlob.exec( src.advance( m[0] ) );\n        src.advance( m[0] );\n        // bq | bc | notextile | pre | h# | fn# | p | ###\n        if ( blockType === 'bq' ) {\n          let inner = m[1];\n          if ( ( m = /^:(\\S+)\\s+/.exec( inner ) ) ) {\n            if ( !pba ) { pba = {}; }\n            pba.cite = m[1];\n            inner = inner.slice( m[0].length );\n          }\n          // RedCloth adds all attr to both: this is bad because it produces duplicate IDs\n          const par = paragraph( inner, 'p', copyAttr( pba, { 'cite': 1, 'id': 1 }), '\\n', options );\n          list.add( [ 'blockquote', pba, '\\n' ].concat( par ).concat( [ '\\n' ] ) );\n        }\n        else if ( blockType === 'bc' ) {\n          const subPba = ( pba ) ? copyAttr( pba, { 'id': 1 }) : null;\n          list.add( [ 'pre', pba, ( subPba ? [ 'code', subPba, m[1] ] : [ 'code', m[1] ] ) ] );\n        }\n        else if ( blockType === 'notextile' ) {\n          list.merge( parseHtml( tokenize( m[1] ) ) );\n        }\n        else if ( blockType === '###' ) {\n          // ignore the insides\n        }\n        else if ( blockType === 'pre' ) {\n          // I disagree with RedCloth, but agree with PHP here:\n          // \"pre(foo#bar).. line1\\n\\nline2\" prevents multiline preformat blocks\n          // ...which seems like the whole point of having an extended pre block?\n          list.add( [ 'pre', pba, m[1] ] );\n        }\n        else if ( reFootnoteDef.test( blockType ) ) { // footnote\n          // Need to be careful: RedCloth fails \"fn1(foo#m). footnote\" -- it confuses the ID\n          const fnid = blockType.replace( /\\D+/g, '' );\n          if ( !pba ) { pba = {}; }\n          pba.class = ( pba['class'] ? pba['class'] + ' ' : '' ) + 'footnote';\n          pba.id = 'fn' + fnid;\n          list.add( [ 'p', pba, [ 'a', { 'href': '#fnr' + fnid }, [ 'sup', fnid ] ], ' ' ]\n                      .concat( parsePhrase( m[1], options ) ) );\n        }\n        else { // heading | paragraph\n          list.merge( paragraph( m[1], blockType, pba, '\\n', options ) );\n        }\n        continue;\n      }\n      else {\n        src.load();\n      }\n    }\n\n    // HTML comment\n    if ( ( m = testComment( src ) ) ) {\n      src.advance( m[0] + ( /(?:\\s*\\n+)+/.exec( src ) || [] )[0] );\n      list.add( [ '!', m[1] ] );\n      continue;\n    }\n\n    // block HTML\n    if ( ( m = testOpenTagBlock( src ) ) ) {\n      const tag = m[1];\n\n      // Is block tag? ...\n      if ( tag in allowedBlocktags ) {\n        if ( m[3] || tag in singletons ) { // single?\n          src.advance( m[0] );\n          if ( /^\\s*(\\n|$)/.test( src ) ) {\n            const elm = [ tag ];\n            if ( m[2] ) { elm.push( parseHtmlAttr( m[2] ) ); }\n            list.add( elm );\n            src.skipWS();\n            continue;\n          }\n        }\n        else if ( tag === 'pre' ) {\n          const t = tokenize( src, { 'pre': 1, 'code': 1 }, tag );\n          const p = parseHtml( t, true );\n          src.load().advance( p.sourceLength );\n          if ( /^\\s*(\\n|$)/.test( src ) ) {\n            list.merge( p );\n            src.skipWS(); // skip tailing whitespace\n            continue;\n          }\n        }\n        else if ( tag === 'notextile' ) {\n          // merge all child elements\n          const t = tokenize( src, null, tag );\n          let s = 1; // start after open tag\n          while ( /^\\s+$/.test( t[s].src ) ) {\n            s++; // skip whitespace\n          }\n          const p = parseHtml( t.slice( s, -1 ), true );\n          const x = t.pop();\n          src.load().advance( x.pos + x.src.length );\n          if ( /^\\s*(\\n|$)/.test( src ) ) {\n            list.merge( p );\n            src.skipWS(); // skip tailing whitespace\n            continue;\n          }\n        }\n        else {\n          src.skipWS();\n          const t = tokenize( src, null, tag );\n          const x = t.pop(); // this should be the end tag\n          let s = 1; // start after open tag\n          while ( t[s] && /^[\\n\\r]+$/.test( t[s].src ) ) {\n            s++; // skip whitespace\n          }\n          if ( x.tag === tag ) {\n            // inner can be empty\n            const inner = ( t.length > 1 ) ? src.slice( t[s].pos, x.pos ) : '';\n            src.advance( x.pos + x.src.length );\n            if ( /^\\s*(\\n|$)/.test( src ) ) {\n              let elm = [ tag ];\n              if ( m[2] ) { elm.push( parseHtmlAttr( m[2] ) ); }\n              if ( tag === 'script' || tag === 'style' ) {\n                elm.push( inner );\n              }\n              else {\n                const innerHTML = inner.replace( /^\\n+/, '' ).replace( /\\s*$/, '' );\n                const isBlock = /\\n\\r?\\n/.test( innerHTML ) || tag === 'ol' || tag === 'ul';\n                const innerElm = isBlock\n                      ? parseFlow( innerHTML, options )\n                      : parsePhrase( innerHTML, extend({}, options, { breaks: false }) );\n                if ( isBlock || /^\\n/.test( inner ) ) {\n                  elm.push( '\\n' );\n                }\n                if ( isBlock || /\\s$/.test( inner ) ) {\n                  innerElm.push( '\\n' );\n                }\n                elm = elm.concat( innerElm );\n              }\n\n              list.add( elm );\n              src.skipWS(); // skip tailing whitespace\n              continue;\n            }\n          }\n        }\n      }\n      src.load();\n    }\n\n    // ruler\n    if ( ( m = reRuler.exec( src ) ) ) {\n      src.advance( m[0] );\n      list.add( [ 'hr' ] );\n      continue;\n    }\n\n    // list\n    if ( ( m = testList( src ) ) ) {\n      src.advance( m[0] );\n      list.add( parseList( m[0], options, src.getSlot(), charPosToLine ) );\n      continue;\n    }\n\n    // definition list\n    if ( ( m = testDefList( src ) ) ) {\n      src.advance( m[0] );\n      list.add( parseDefList( m[0], options, src.getSlot(), charPosToLine ) );\n      continue;\n    }\n\n    // table\n    if ( ( m = testTable( src ) ) ) {\n      src.advance( m[0] );\n      list.add( parseTable( m[1], options, src.getSlot(), charPosToLine ) );\n      continue;\n    }\n\n    // paragraph\n    m = reBlockNormal.exec( src );\n    list.merge( paragraph( m[1], 'p', addLineNumber({}, options, charPosToLine, 0, src.getSlot() ), '\\n', options ) );\n    src.advance( m[0] );\n  }\n\n  return linkRefs ? fixLinks( list.get(), linkRefs ) : list.get();\n}\n\nexports.parseFlow = parseFlow;\n\n\n\n// WEBPACK FOOTER //\n// ./src/textile/flow.js","module.exports = function builder ( initArr ) {\n  const arr = Array.isArray( initArr ) ? initArr : [];\n\n  return {\n    add: function ( node ) {\n      if ( typeof node === 'string' &&\n           typeof arr[ arr.length - 1 ] === 'string' ) {\n        // join if possible\n        arr[ arr.length - 1 ] += node;\n      }\n      else if ( Array.isArray( node ) ) {\n        arr.push( node.filter( s => s !== undefined ) );\n      }\n      else if ( node ) {\n        arr.push( node );\n      }\n      return this;\n    },\n\n    merge: function ( arr ) {\n      for ( let i = 0, l = arr.length; i < l; i++ ) {\n        this.add( arr[i] );\n      }\n      return this;\n    },\n\n    linebreak: function () {\n      if ( arr.length ) {\n        this.add( '\\n' );\n      }\n    },\n\n    get: function () {\n      return arr;\n    }\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/builder.js","// recurse the tree and swap out any \"href\" attributes\n// this uses the context as the replace dictionary so it can be fed to Array#map\nmodule.exports = function fixLinks ( ml, dict ) {\n  if ( Array.isArray( ml ) ) {\n    if ( ml[0] === 'a' ) { // found a link\n      const attr = ml[1];\n      if ( typeof attr === 'object' && 'href' in attr && attr.href in dict ) {\n        attr.href = dict[attr.href];\n      }\n    }\n    for ( let i = 0, l = ml.length; i < l; i++ ) {\n      if ( Array.isArray( ml[i] ) ) {\n        fixLinks( ml[i], dict );\n      }\n    }\n  }\n  return ml;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fixlinks.js","/* textile inline parser */\n\nconst ribbon = require( '../ribbon' );\nconst builder = require( '../builder' );\nconst re = require( '../re' );\n\nconst { parseAttr } = require( './attr' );\nconst { parseGlyph } = require( './glyph' );\nconst { parseHtml, parseHtmlAttr, tokenize, singletons, testComment, testOpenTag } = require( '../html' );\n\nconst { ucaps, txattr, txcite } = require( './re_ext' );\nre.pattern.txattr = txattr;\nre.pattern.txcite = txcite;\nre.pattern.ucaps = ucaps;\n\nconst phraseConvert = {\n  '*': 'strong',\n  '**': 'b',\n  '??': 'cite',\n  '_': 'em',\n  '__': 'i',\n  '-': 'del',\n  '%': 'span',\n  '+': 'ins',\n  '~': 'sub',\n  '^': 'sup',\n  '@': 'code'\n};\n\nconst rePhrase = /^([\\[\\{]?)(__?|\\*\\*?|\\?\\?|[\\-\\+\\^~@%])/;\nconst reImage = re.compile( /^!(?!\\s)([:txattr:](?:\\.[^\\n\\S]|\\.(?:[^\\.\\/]))?)([^!\\s]+?) ?(?:\\(((?:[^\\(\\)]|\\([^\\(\\)]+\\))+)\\))?!(?::([^\\s]+?(?=[!-\\.:-@\\[\\\\\\]-`{-~](?:$|\\s)|\\s|$)))?/ );\nconst reImageFenced = re.compile( /^\\[!(?!\\s)([:txattr:](?:\\.[^\\n\\S]|\\.(?:[^\\.\\/]))?)([^!\\s]+?) ?(?:\\(((?:[^\\(\\)]|\\([^\\(\\)]+\\))+)\\))?!(?::([^\\s]+?(?=[!-\\.:-@\\[\\\\\\]-`{-~](?:$|\\s)|\\s|$)))?\\]/ );\n// NB: there is an exception in here to prevent matching \"TM)\"\nconst reCaps = re.compile( /^((?!TM\\)|tm\\))[[:ucaps:]](?:[[:ucaps:]\\d]{1,}(?=\\()|[[:ucaps:]\\d]{2,}))(?:\\((.*?)\\))?(?=\\W|$)/ );\nconst reLink = re.compile( /^\"(?!\\s)((?:[^\"]|\"(?![\\s:])[^\\n\"]+\"(?!:))+)\"[:txcite:]/ );\nconst reLinkFenced = /^\\[\"([^\\n]+?)\":((?:\\[[a-z0-9]*\\]|[^\\]])+)\\]/;\nconst reLinkTitle = /\\s*\\(((?:\\([^\\(\\)]*\\)|[^\\(\\)])+)\\)$/;\nconst reFootnote = /^\\[(\\d+)(!?)\\]/;\n\nfunction parsePhrase ( src, options ) {\n  src = ribbon( src );\n  const list = builder();\n  let m;\n  let pba;\n\n  // loop\n  do {\n    src.save();\n\n    // linebreak -- having this first keeps it from messing to much with other phrases\n    if ( src.startsWith( '\\r\\n' ) ) {\n      src.advance( 1 ); // skip cartridge returns\n    }\n    if ( src.startsWith( '\\n' ) ) {\n      src.advance( 1 );\n      if ( src.startsWith( ' ' ) ) {\n        src.advance( 1 );\n      }\n      else if ( options.breaks ) {\n        list.add( [ 'br' ] );\n      }\n      list.add( '\\n' );\n      continue;\n    }\n\n    // inline notextile\n    if ( ( m = /^==(.*?)==/.exec( src ) ) ) {\n      src.advance( m[0] );\n      list.add( m[1] );\n      continue;\n    }\n\n    // lookbehind => /([\\s>.,\"'?!;:])$/\n    const behind = src.lookbehind( 1 );\n    const boundary = !behind || /^[\\s>.,\"'?!;:()]$/.test( behind );\n    // FIXME: need to test right boundary for phrases as well\n    if ( ( m = rePhrase.exec( src ) ) && ( boundary || m[1] ) ) {\n      src.advance( m[0] );\n      const tok = m[2];\n      const fence = m[1];\n      const phraseType = phraseConvert[tok];\n      const code = phraseType === 'code';\n\n      if ( ( pba = !code && parseAttr( src, phraseType, tok ) ) ) {\n        src.advance( pba[0] );\n        pba = pba[1];\n      }\n      // FIXME: if we can't match the fence on the end, we should output fence-prefix as normal text\n      // seek end\n      let mMid;\n      let mEnd;\n      if ( fence === '[' ) {\n        mMid = '^(.*?)';\n        mEnd = '(?:])';\n      }\n      else if ( fence === '{' ) {\n        mMid = '^(.*?)';\n        mEnd = '(?:})';\n      }\n      else {\n        const t1 = re.escape( tok.charAt( 0 ) );\n        mMid = ( code ) ? '^(\\\\S+|\\\\S+.*?\\\\S)'\n                        : `^([^\\\\s${ t1 }]+|[^\\\\s${ t1 }].*?\\\\S(${ t1 }*))`;\n        mEnd = '(?=$|[\\\\s.,\"\\'!?;:()«»„“”‚‘’])';\n      }\n      const rx = re.compile( `${ mMid }(${ re.escape( tok ) })${ mEnd }` );\n      if ( ( m = rx.exec( src ) ) && m[1] ) {\n        src.advance( m[0] );\n        if ( code ) {\n          list.add( [ phraseType, m[1] ] );\n        }\n        else {\n          list.add( [ phraseType, pba ].concat( parsePhrase( m[1], options ) ) );\n        }\n        continue;\n      }\n      // else\n      src.load();\n    }\n\n    // image\n    if ( ( m = reImage.exec( src ) ) || ( m = reImageFenced.exec( src ) ) ) {\n      src.advance( m[0] );\n\n      pba = m[1] && parseAttr( m[1], 'img' );\n      const attr = pba ? pba[1] : { 'src': '' };\n      let img = [ 'img', attr ];\n      attr.src = m[2];\n      attr.alt = m[3] ? ( attr.title = m[3] ) : '';\n\n      if ( m[4] ) { // +cite causes image to be wraped with a link (or link_ref)?\n        // TODO: support link_ref for image cite\n        img = [ 'a', { 'href': m[4] }, img ];\n      }\n      list.add( img );\n      continue;\n    }\n\n    // html comment\n    if ( ( m = testComment( src ) ) ) {\n      src.advance( m[0] );\n      list.add( [ '!', m[1] ] );\n      continue;\n    }\n    // html tag\n    // TODO: this seems to have a lot of overlap with block tags... DRY?\n    if ( ( m = testOpenTag( src ) ) ) {\n      src.advance( m[0] );\n      const tag = m[1];\n      const single = m[3] || m[1] in singletons;\n      let element = [ tag ];\n      if ( m[2] ) {\n        element.push( parseHtmlAttr( m[2] ) );\n      }\n      if ( single ) { // single tag\n        list.add( element ).add( src.skipWS() );\n        continue;\n      }\n      else { // need terminator\n        // gulp up the rest of this block...\n        const reEndTag = re.compile( `^(.*?)(</${ tag }\\\\s*>)`, 's' );\n        if ( ( m = reEndTag.exec( src ) ) ) {\n          src.advance( m[0] );\n          if ( tag === 'code' ) {\n            element.push( m[1] );\n          }\n          else if ( tag === 'notextile' ) {\n            // HTML is still parsed, even though textile is not\n            list.merge( parseHtml( tokenize( m[1] ) ) );\n            continue;\n          }\n          else {\n            element = element.concat( parsePhrase( m[1], options ) );\n          }\n          list.add( element );\n          continue;\n        }\n        // end tag is missing, treat tag as normal text...\n      }\n      src.load();\n    }\n\n    // footnote\n    if ( ( m = reFootnote.exec( src ) ) && /\\S/.test( behind ) ) {\n      src.advance( m[0] );\n      list.add( [ 'sup', { 'class': 'footnote', 'id': 'fnr' + m[1] },\n                  ( m[2] === '!' ? m[1] // \"!\" suppresses the link\n                                 : [ 'a', { href: '#fn' + m[1] }, m[1] ] )\n                ] );\n      continue;\n    }\n\n    // caps / abbr\n    if ( ( m = reCaps.exec( src ) ) ) {\n      src.advance( m[0] );\n      let caps = [ 'span', { 'class': 'caps' }, m[1] ];\n      if ( m[2] ) {\n        // FIXME: use <abbr>, not acronym!\n        caps = [ 'acronym', { 'title': m[2] }, caps ];\n      }\n      list.add( caps );\n      continue;\n    }\n\n    // links\n    if ( ( boundary && ( m = reLink.exec( src ) ) ) ||\n                       ( m = reLinkFenced.exec( src ) ) ) {\n      src.advance( m[0] );\n      let title = m[1].match( reLinkTitle );\n      let inner = ( title ) ? m[1].slice( 0, m[1].length - title[0].length ) : m[1];\n      if ( ( pba = parseAttr( inner, 'a' ) ) ) {\n        inner = inner.slice( pba[0] );\n        pba = pba[1];\n      }\n      else {\n        pba = {};\n      }\n      if ( title && !inner ) {\n        inner = title[0];\n        title = '';\n      }\n      pba.href = m[2];\n      if ( title ) { pba.title = title[1]; }\n      list.add( [ 'a', pba ].concat( parsePhrase( inner.replace( /^(\\.?\\s*)/, '' ), options ) ) );\n      continue;\n    }\n\n    // no match, move by all \"uninteresting\" chars\n    m = /([a-zA-Z0-9,.':]+|[ \\f\\r\\t\\v\\xA0\\u2028\\u2029]+|[^\\0])/.exec( src );\n    if ( m ) {\n      list.add( m[0] );\n    }\n    src.advance( m ? m[0].length || 1 : 1 );\n  }\n  while ( src.valueOf() );\n\n  return list.get().map( parseGlyph );\n}\n\nexports.parsePhrase = parsePhrase;\n\n\n\n// WEBPACK FOOTER //\n// ./src/textile/phrase.js","const reClassid = /^\\(([^\\(\\)\\n]+)\\)/;\nconst rePaddingL = /^(\\(+)/;\nconst rePaddingR = /^(\\)+)/;\nconst reAlignBlock = /^(<>|<|>|=)/;\nconst reAlignImg = /^(<|>|=)/;\nconst reVAlign = /^(~|\\^|\\-)/;\nconst reColSpan = /^\\\\(\\d+)/;\nconst reRowSpan = /^\\/(\\d+)/;\nconst reStyles = /^\\{([^\\}]*)\\}/;\nconst reCSS = /^\\s*([^:\\s]+)\\s*:\\s*(.+)\\s*$/;\nconst reLang = /^\\[([^\\[\\]\\n]+)\\]/;\n\nconst pbaAlignLookup = {\n  '<': 'left',\n  '=': 'center',\n  '>': 'right',\n  '<>': 'justify'\n};\n\nconst pbaVAlignLookup = {\n  '~': 'bottom',\n  '^': 'top',\n  '-': 'middle'\n};\n\nfunction copyAttr ( s, blacklist ) {\n  if ( !s ) { return undefined; }\n  const d = {};\n  for ( const k in s ) {\n    if ( k in s && ( !blacklist || !( k in blacklist ) ) ) {\n      d[ k ] = s[ k ];\n    }\n  }\n  return d;\n}\n\nfunction testBlock ( name ) {\n  // \"in\" test would be better but what about fn#.?\n  return /^(?:table|t[dh]|t(?:foot|head|body)|b[qc]|div|notextile|pre|h[1-6]|fn\\\\d+|p|###)$/.test( name );\n}\n\n/*\n  The attr bit causes massive problems for span elements when parentheses are used.\n  Parentheses are a total mess and, unsurprisingly, cause trip-ups:\n\n   RC: `_{display:block}(span) span (span)_` -> `<em style=\"display:block;\" class=\"span\">(span) span (span)</em>`\n   PHP: `_{display:block}(span) span (span)_` -> `<em style=\"display:block;\">(span) span (span)</em>`\n\n  PHP and RC seem to mostly solve this by not parsing a final attr parens on spans if the\n  following character is a non-space. I've duplicated that: Class/ID is not matched on spans\n  if it is followed by `endToken` or <space>.\n\n  Lang is not matched here if it is followed by the end token. Theoretically I could limit the lang\n  attribute to /^\\[[a-z]{2+}(\\-[a-zA-Z0-9]+)*\\]/ because Textile is layered on top of HTML which\n  only accepts valid BCP 47 language tags, but who knows what atrocities are being preformed\n  out there in the real world. So this attempts to emulate the other libraries.\n*/\nfunction parseAttr ( input, element, endToken ) {\n  input = String( input );\n  if ( !input || element === 'notextile' ) {\n    return undefined;\n  }\n\n  let m;\n  const st = {};\n  const o = { 'style': st };\n  let remaining = input;\n\n  const isBlock = testBlock( element );\n  const isImg = element === 'img';\n  const isList = element === 'li';\n  const isPhrase = !isBlock && !isImg && element !== 'a';\n  const reAlign = ( isImg ) ? reAlignImg : reAlignBlock;\n\n  do {\n    if ( ( m = reStyles.exec( remaining ) ) ) {\n      m[1].split( ';' ).forEach( function ( p ) {\n        const d = p.match( reCSS );\n        if ( d ) { st[ d[1] ] = d[2]; }\n      });\n      remaining = remaining.slice( m[0].length );\n      continue;\n    }\n\n    if ( ( m = reLang.exec( remaining ) ) ) {\n      const rm = remaining.slice( m[0].length );\n      if ( ( !rm && isPhrase ) ||\n           ( endToken && endToken === rm.slice( 0, endToken.length ) ) ) {\n        m = null;\n      }\n      else {\n        o['lang'] = m[1];\n        remaining = remaining.slice( m[0].length );\n      }\n      continue;\n    }\n\n    if ( ( m = reClassid.exec( remaining ) ) ) {\n      const rm = remaining.slice( m[0].length );\n      if (\n          ( !rm && isPhrase ) ||\n          ( endToken && ( rm[0] === ' ' || endToken === rm.slice( 0, endToken.length ) ) )\n         ) {\n        m = null;\n      }\n      else {\n        const bits = m[1].split( '#' );\n        if ( bits[0] ) { o.class = bits[0]; }\n        if ( bits[1] ) { o.id = bits[1]; }\n        remaining = rm;\n      }\n      continue;\n    }\n\n    if ( isBlock || isList ) {\n      if ( ( m = rePaddingL.exec( remaining ) ) ) {\n        st[ 'padding-left' ] = `${ m[1].length }em`;\n        remaining = remaining.slice( m[0].length );\n        continue;\n      }\n      if ( ( m = rePaddingR.exec( remaining ) ) ) {\n        st[ 'padding-right' ] = `${ m[1].length }em`;\n        remaining = remaining.slice( m[0].length );\n        continue;\n      }\n    }\n\n    // only for blocks:\n    if ( isImg || isBlock || isList ) {\n      if ( ( m = reAlign.exec( remaining ) ) ) {\n        const align = pbaAlignLookup[ m[1] ];\n        if ( isImg ) {\n          o[ 'align' ] = align;\n        }\n        else {\n          st[ 'text-align' ] = align;\n        }\n        remaining = remaining.slice( m[0].length );\n        continue;\n      }\n    }\n\n    // only for table cells\n    if ( element === 'td' || element === 'tr' ) {\n      if ( ( m = reVAlign.exec( remaining ) ) ) {\n        st[ 'vertical-align' ] = pbaVAlignLookup[ m[1] ];\n        remaining = remaining.slice( m[0].length );\n        continue;\n      }\n    }\n    if ( element === 'td' ) {\n      if ( ( m = reColSpan.exec( remaining ) ) ) {\n        o[ 'colspan' ] = m[1];\n        remaining = remaining.slice( m[0].length );\n        continue;\n      }\n      if ( ( m = reRowSpan.exec( remaining ) ) ) {\n        o[ 'rowspan' ] = m[1];\n        remaining = remaining.slice( m[0].length );\n        continue;\n      }\n    }\n  }\n  while ( m );\n\n  // collapse styles\n  const s = [];\n  for ( const v in st ) {\n    s.push( `${ v }:${ st[v] }` );\n  }\n  if ( s.length ) {\n    o.style = s.join( ';' );\n  }\n  else {\n    delete o.style;\n  }\n\n  return ( remaining === input ) ? undefined : [ input.length - remaining.length, o ];\n}\n\nfunction addLineNumber ( jsonmlEntryAttr, options, charPosToLine, charOffset, charPos ) {\n  if ( options.showOriginalLineNumber && charPosToLine ) {\n    charOffset = charOffset || 0;\n    if ( !jsonmlEntryAttr ) {\n      jsonmlEntryAttr = {};\n    }\n    jsonmlEntryAttr['data-line'] = charPosToLine[ charOffset + charPos ];\n    if ( options.cssClassOriginalLineNumber ) {\n      jsonmlEntryAttr['class'] = ( jsonmlEntryAttr['class'] ? jsonmlEntryAttr['class'] + ' ' : '' ) + options.cssClassOriginalLineNumber;\n    }\n  }\n  return jsonmlEntryAttr;\n}\n\nmodule.exports = {\n  copyAttr: copyAttr,\n  parseAttr: parseAttr,\n  addLineNumber: addLineNumber\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/textile/attr.js","/* textile glyph parser */\n\nconst re = require( '../re' );\n\nconst reApostrophe = /(\\w)'(\\w)/g;\nconst reArrow = /([^\\-]|^)->/;\nconst reClosingDQuote = re.compile( /([^\\s\\[\\(])\"(?=$|\\s|[:punct:])/g );\nconst reClosingSQuote = re.compile( /([^\\s\\[\\(])'(?=$|\\s|[:punct:])/g );\nconst reCopyright = /(\\b ?|\\s|^)(?:\\(C\\)|\\[C\\])/gi;\nconst reDimsign = /([\\d\\.,]+['\"]? ?)x( ?)(?=[\\d\\.,]['\"]?)/g;\nconst reDoublePrime = re.compile( /(\\d*[\\.,]?\\d+)\"(?=\\s|$|[:punct:])/g );\nconst reEllipsis = /([^.]?)\\.{3}/g;\nconst reEmdash = /(^|[\\s\\w])--([\\s\\w]|$)/g;\nconst reEndash = / - /g;\nconst reOpenDQuote = /\"/g;\nconst reOpenSQuote = /'/g;\nconst reRegistered = /(\\b ?|\\s|^)(?:\\(R\\)|\\[R\\])/gi;\nconst reSinglePrime = re.compile( /(\\d*[\\.,]?\\d+)'(?=\\s|$|[:punct:])/g );\nconst reTrademark = /(\\b ?|\\s|^)(?:\\((?:TM|tm)\\)|\\[(?:TM|tm)\\])/g;\n\nexports.parseGlyph = function parseGlyph ( src ) {\n  if ( typeof src !== 'string' ) {\n    return src;\n  }\n  // NB: order is important here ...\n  return src\n    .replace( reArrow, '$1&#8594;' )\n    .replace( reDimsign, '$1&#215;$2' )\n    .replace( reEllipsis, '$1&#8230;' )\n    .replace( reEmdash, '$1&#8212;$2' )\n    .replace( reEndash, ' &#8211; ' )\n    .replace( reTrademark, '$1&#8482;' )\n    .replace( reRegistered, '$1&#174;' )\n    .replace( reCopyright, '$1&#169;' )\n    // double quotes\n    .replace( reDoublePrime, '$1&#8243;' )\n    .replace( reClosingDQuote, '$1&#8221;' )\n    .replace( reOpenDQuote, '&#8220;' )\n    // single quotes\n    .replace( reSinglePrime, '$1&#8242;' )\n    .replace( reApostrophe, '$1&#8217;$2' )\n    .replace( reClosingSQuote, '$1&#8217;' )\n    .replace( reOpenSQuote, '&#8216;' )\n    // fractions and degrees\n    .replace( /[\\(\\[]1\\/4[\\]\\)]/, '&#188;' )\n    .replace( /[\\(\\[]1\\/2[\\]\\)]/, '&#189;' )\n    .replace( /[\\(\\[]3\\/4[\\]\\)]/, '&#190;' )\n    .replace( /[\\(\\[]o[\\]\\)]/, '&#176;' )\n    .replace( /[\\(\\[]\\+\\/\\-[\\]\\)]/, '&#177;' );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/textile/glyph.js","/* eslint camelcase: 0 */\n\nexports.txblocks = '(?:b[qc]|div|notextile|pre|h[1-6]|fn\\\\d+|p|###)';\n\nexports.ucaps = 'A-Z' +\n    // Latin extended À-Þ\n    '\\u00c0-\\u00d6\\u00d8-\\u00de' +\n    // Latin caps with embelishments and ligatures...\n    '\\u0100\\u0102\\u0104\\u0106\\u0108\\u010a\\u010c\\u010e\\u0110\\u0112\\u0114\\u0116\\u0118\\u011a\\u011c\\u011e\\u0120\\u0122\\u0124\\u0126\\u0128\\u012a\\u012c\\u012e\\u0130\\u0132\\u0134\\u0136\\u0139\\u013b\\u013d\\u013f' +\n    '\\u0141\\u0143\\u0145\\u0147\\u014a\\u014c\\u014e\\u0150\\u0152\\u0154\\u0156\\u0158\\u015a\\u015c\\u015e\\u0160\\u0162\\u0164\\u0166\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017b\\u017d' +\n    '\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018b\\u018e-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019c\\u019d\\u019f\\u01a0\\u01a2\\u01a4\\u01a6\\u01a7\\u01a9\\u01ac\\u01ae\\u01af\\u01b1-\\u01b3\\u01b5\\u01b7\\u01b8\\u01bc' +\n    '\\u01c4\\u01c7\\u01ca\\u01cd\\u01cf\\u01d1\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u01de\\u01e0\\u01e2\\u01e4\\u01e6\\u01e8\\u01ea\\u01ec\\u01ee\\u01f1\\u01f4\\u01f6-\\u01f8\\u01fa\\u01fc\\u01fe' +\n    '\\u0200\\u0202\\u0204\\u0206\\u0208\\u020a\\u020c\\u020e\\u0210\\u0212\\u0214\\u0216\\u0218\\u021a\\u021c\\u021e\\u0220\\u0222\\u0224\\u0226\\u0228\\u022a\\u022c\\u022e\\u0230\\u0232\\u023a\\u023b\\u023d\\u023e' +\n    '\\u0241\\u0243-\\u0246\\u0248\\u024a\\u024c\\u024e' +\n    '\\u1e00\\u1e02\\u1e04\\u1e06\\u1e08\\u1e0a\\u1e0c\\u1e0e\\u1e10\\u1e12\\u1e14\\u1e16\\u1e18\\u1e1a\\u1e1c\\u1e1e\\u1e20\\u1e22\\u1e24\\u1e26\\u1e28\\u1e2a\\u1e2c\\u1e2e\\u1e30\\u1e32\\u1e34\\u1e36\\u1e38\\u1e3a\\u1e3c\\u1e3e\\u1e40' +\n    '\\u1e42\\u1e44\\u1e46\\u1e48\\u1e4a\\u1e4c\\u1e4e\\u1e50\\u1e52\\u1e54\\u1e56\\u1e58\\u1e5a\\u1e5c\\u1e5e\\u1e60\\u1e62\\u1e64\\u1e66\\u1e68\\u1e6a\\u1e6c\\u1e6e\\u1e70\\u1e72\\u1e74\\u1e76\\u1e78\\u1e7a\\u1e7c\\u1e7e' +\n    '\\u1e80\\u1e82\\u1e84\\u1e86\\u1e88\\u1e8a\\u1e8c\\u1e8e\\u1e90\\u1e92\\u1e94\\u1e9e\\u1ea0\\u1ea2\\u1ea4\\u1ea6\\u1ea8\\u1eaa\\u1eac\\u1eae\\u1eb0\\u1eb2\\u1eb4\\u1eb6\\u1eb8\\u1eba\\u1ebc\\u1ebe' +\n    '\\u1ec0\\u1ec2\\u1ec4\\u1ec6\\u1ec8\\u1eca\\u1ecc\\u1ece\\u1ed0\\u1ed2\\u1ed4\\u1ed6\\u1ed8\\u1eda\\u1edc\\u1ede\\u1ee0\\u1ee2\\u1ee4\\u1ee6\\u1ee8\\u1eea\\u1eec\\u1eee\\u1ef0\\u1ef2\\u1ef4\\u1ef6\\u1ef8\\u1efa\\u1efc\\u1efe' +\n    '\\u2c60\\u2c62-\\u2c64\\u2c67\\u2c69\\u2c6b\\u2c6d-\\u2c70\\u2c72\\u2c75\\u2c7e\\u2c7f' +\n    '\\ua722\\ua724\\ua726\\ua728\\ua72a\\ua72c\\ua72e\\ua732\\ua734\\ua736\\ua738\\ua73a\\ua73c\\ua73e' +\n    '\\ua740\\ua742\\ua744\\ua746\\ua748\\ua74a\\ua74c\\ua74e\\ua750\\ua752\\ua754\\ua756\\ua758\\ua75a\\ua75c\\ua75e\\ua760\\ua762\\ua764\\ua766\\ua768\\ua76a\\ua76c\\ua76e\\ua779\\ua77b\\ua77d\\ua77e' +\n    '\\ua780\\ua782\\ua784\\ua786\\ua78b\\ua78d\\ua790\\ua792\\ua7a0\\ua7a2\\ua7a4\\ua7a6\\ua7a8\\ua7aa';\n\nexports.txcite = ':((?:[^\\\\s()]|\\\\([^\\\\s()]+\\\\)|[()])+?)(?=[!-\\\\.:-@\\\\[\\\\\\\\\\\\]-`{-~]+(?:$|\\\\s)|$|\\\\s)';\n\nconst attr_class = exports.attr_class = '\\\\([^\\\\)]+\\\\)';\nconst attr_style = exports.attr_style = '\\\\{[^\\\\}]+\\\\}';\nconst attr_lang = exports.attr_lang = '\\\\[[^\\\\[\\\\]]+\\\\]';\nconst attr_align = exports.attr_align = '(?:<>|<|>|=)';\nconst attr_pad = exports.attr_pad = '[\\\\(\\\\)]+';\n\nconst txattr = exports.txattr = `(?:${ attr_class }|${ attr_style }|${ attr_lang }|${ attr_align }|${ attr_pad })*`;\n\nexports.txlisthd = `[\\\\t ]*[\\\\#\\\\*]*(\\\\*|\\\\#(?:_|\\\\d+)?)${ txattr }(?: +\\\\S|\\\\.\\\\s*(?=\\\\S|\\\\n))`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/textile/re_ext.js","/* textile list parser */\nconst ribbon = require( '../ribbon' );\nconst re = require( '../re' );\nconst merge = require( '../merge' );\n\nconst { parseAttr, addLineNumber } = require( './attr' );\nconst { parsePhrase } = require( './phrase' );\n\nconst { txlisthd } = require( './re_ext' );\nre.pattern.txlisthd = txlisthd;\nconst reList = re.compile( /^((?:[:txlisthd:][^\\0]*?(?:\\r?\\n|$))+)(\\s*\\n|$)/, 's' );\nconst reItem = re.compile( /^([#\\*]+)([^\\0]+?)(\\n(?=[:txlisthd:])|$)/, 's' );\n\nfunction listPad ( n ) {\n  let s = '\\n';\n  while ( n-- ) {\n    s += '\\t';\n  }\n  return s;\n}\n\nfunction testList ( src ) {\n  return reList.exec( src );\n}\n\nfunction parseList ( src, options, charOffset, charPosToLine ) {\n  if ( options.showOriginalLineNumber ) {\n    const removedSrc = src.match( /(^|\\r?\\n)[\\t ]+/ );\n    if ( removedSrc && removedSrc[0] ) {\n      charOffset++;\n    }\n  }\n  src = ribbon( src.replace( /(^|\\r?\\n)[\\t ]+/, '$1' ) );\n\n  const stack = [];\n  const currIndex = {};\n  const lastIndex = options._lst || {};\n  let itemIndex = 0;\n  let listAttr;\n  let m;\n  let n;\n  let s;\n\n  while ( ( m = reItem.exec( src ) ) ) {\n    const item = [ 'li' ];\n    const destLevel = m[1].length;\n    const type = ( m[1].substr( -1 ) === '#' ) ? 'ol' : 'ul';\n    let newLi = null;\n    let lst;\n    let par;\n    let pba;\n    let r;\n\n    // list starts and continuations\n    if ( ( n = /^(_|\\d+)/.exec( m[2] ) ) ) {\n      itemIndex = isFinite( n[1] )\n            ? parseInt( n[1], 10 )\n            : lastIndex[ destLevel ] || currIndex[ destLevel ] || 1;\n      m[2] = m[2].slice( n[1].length );\n    }\n\n    if ( ( pba = parseAttr( m[2], 'li' ) ) ) {\n      m[2] = m[2].slice( pba[0] );\n      pba = pba[1];\n    }\n\n    pba = addLineNumber( pba, options, charPosToLine, charOffset, src.getPos() );\n\n    // list control\n    if ( /^\\.\\s*$/.test( m[2] ) ) {\n      listAttr = pba || {};\n      src.advance( m[0] );\n      continue;\n    }\n\n    // create nesting until we have correct level\n    while ( stack.length < destLevel ) {\n      // list always has an attribute object, this simplifies first-pba resolution\n      lst = [ type, {}, listPad( stack.length + 1 ), ( newLi = [ 'li' ] ) ];\n      par = stack[ stack.length - 1 ];\n      if ( par ) {\n        par.li.push( listPad( stack.length ) );\n        par.li.push( lst );\n      }\n      stack.push({\n        ul: lst,\n        li: newLi,\n        // count attributes's found per list\n        att: 0\n      });\n      currIndex[ stack.length ] = 1;\n    }\n\n    // remove nesting until we have correct level\n    while ( stack.length > destLevel ) {\n      r = stack.pop();\n      r.ul.push( listPad( stack.length ) );\n      // lists have a predictable structure - move pba from listitem to list\n      if ( r.att === 1 && !r.ul[3][1].substr ) {\n        merge( r.ul[1], r.ul[3].splice( 1, 1 )[ 0 ] );\n      }\n    }\n\n    // parent list\n    par = stack[ stack.length - 1 ];\n\n    if ( itemIndex ) {\n      par.ul[1].start = itemIndex;\n      currIndex[destLevel] = itemIndex;\n      // falsy prevents this from fireing until it is set again\n      itemIndex = 0;\n    }\n    if ( listAttr ) {\n      // \"more than 1\" prevent attribute transfers on list close\n      par.att = 9;\n      merge( par.ul[1], listAttr );\n      listAttr = null;\n    }\n\n    if ( !newLi ) {\n      par.ul.push( listPad( stack.length ), item );\n      par.li = item;\n    }\n    if ( pba ) {\n      par.li.push( pba );\n      par.att++;\n    }\n    Array.prototype.push.apply( par.li, parsePhrase( m[2].trim(), options ) );\n\n    src.advance( m[0] );\n    currIndex[destLevel] = ( currIndex[destLevel] || 0 ) + 1;\n  }\n\n  // remember indexes for continuations next time\n  options._lst = currIndex;\n\n  while ( stack.length ) {\n    s = stack.pop();\n    s.ul.push( listPad( stack.length ) );\n    // lists have a predictable structure - move pba from listitem to list\n    if ( s.att === 1 && !s.ul[3][1].substr ) {\n      merge( s.ul[1], s.ul[3].splice( 1, 1 )[0] );\n    }\n  }\n\n  return s.ul;\n}\n\nmodule.exports = {\n  testList: testList,\n  parseList: parseList\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/textile/list.js","/* definitions list parser */\n\nconst ribbon = require( '../ribbon' );\n\nconst { addLineNumber } = require( './attr' );\n\nconst reDeflist = /^((?:- (?:[^\\n]\\n?)+?)+:=(?: *\\n[^\\0]+?=:(?:\\n|$)|(?:[^\\0]+?(?:$|\\n(?=\\n|- )))))+/;\nconst reItem = /^((?:- (?:[^\\n]\\n?)+?)+):=( *\\n[^\\0]+?=:\\s*(?:\\n|$)|(?:[^\\0]+?(?:$|\\n(?=\\n|- ))))/;\n\nfunction testDefList ( src ) {\n  return reDeflist.exec( src );\n}\n\nfunction parseDefList ( src, options, charOffset, charPosToLine ) {\n  if ( options.showOriginalLineNumber ) {\n    const removedSrc = src.match( /^\\s+/ );\n    if ( removedSrc && removedSrc[0] ) {\n      charOffset += removedSrc[0].length;\n    }\n  }\n  src = ribbon( src.trim() );\n\n  // late loading to get around the lack of non-circular-dependency support in RequireJS\n  const parsePhrase = require( './phrase' ).parsePhrase;\n  const parseFlow = require( './flow' ).parseFlow;\n\n  const deflist = [ 'dl', '\\n' ];\n  let terms;\n  let def;\n  let m;\n\n  while ( ( m = reItem.exec( src ) ) ) {\n    // add terms\n    terms = m[1].split( /(?:^|\\n)\\- / );\n    let localCharOffset = terms[0].length;\n    terms = terms.slice( 1 );\n    let separators = [];\n    if ( options.showOriginalLineNumber ) {\n      separators = m[1].match( /(?:^|\\n)\\- /g ).slice( 1 );\n    }\n    while ( terms.length ) {\n      const term = terms.shift();\n      deflist.push( '\\t'\n                , [ 'dt' ].concat(\n                  addLineNumber({}, options, charPosToLine, charOffset, src.getPos() + localCharOffset )\n                  , parsePhrase( term.trim(), options ) )\n                , '\\n'\n                );\n      if ( options.showOriginalLineNumber ) {\n        localCharOffset += term.length;\n        // perhaps no separator at the end of the list\n        if ( separators.length ) {\n          localCharOffset += separators.shift().length;\n        }\n      }\n    }\n    // add definitions\n    def = m[2].trim();\n    if ( options.showOriginalLineNumber ) {\n      // rebase local char offset, and add +2 for ':=' between term and definition\n      localCharOffset = m[1].length + 2;\n\n      const removedSrc = m[2].match( /^\\s+/ );\n      if ( removedSrc && removedSrc[0] ) {\n        localCharOffset += removedSrc[0].length;\n      }\n    }\n    deflist.push( '\\t'\n              , [ 'dd' ].concat(\n                  addLineNumber({}, options, charPosToLine, charOffset, src.getPos() + localCharOffset )\n                  , ( /=:$/.test( def ) )\n                    ? parseFlow( def.slice( 0, -2 ).trim(), options, options.showOriginalLineNumber ? charPosToLine[ ( charOffset || 0 ) + localCharOffset + src.getPos() ] : 0 )\n                    : parsePhrase( def, options )\n                )\n              , '\\n'\n              );\n    src.advance( m[0] );\n  }\n  return deflist;\n}\n\nexports.testDefList = testDefList;\nexports.parseDefList = parseDefList;\n\n\n\n// WEBPACK FOOTER //\n// ./src/textile/deflist.js","/* textile table parser */\n\nconst re = require( '../re' );\nconst merge = require( '../merge' );\nconst ribbon = require( '../ribbon' );\n\nconst { parseAttr, addLineNumber } = require( './attr' );\nconst { parsePhrase } = require( './phrase' );\nconst { reIndent } = require( '../jsonml' );\n\nconst { txattr } = require( './re_ext' );\nre.pattern.txattr = txattr;\n\nconst reTable = re.compile( /^((?:table[:txattr:]\\.(?:\\s(.+?))\\s*\\n)?(?:(?:[:txattr:]\\.[^\\n\\S]*)?\\|.*?\\|[^\\n\\S]*(?:\\n|$))+)([^\\n\\S]*\\n)?/, 's' );\nconst reHead = /^table(_?)([^\\n]*?)\\.(?:[ \\t](.+?))?\\s*\\n/;\nconst reRow = re.compile( /^(?:\\|([~\\^\\-][:txattr:])\\.\\s*\\n)?([:txattr:]\\.[^\\n\\S]*)?\\|(.*?)\\|[^\\n\\S]*(\\n|$)/, 's' );\nconst reCaption = /^\\|=([^\\n+]*)\\n/;\nconst reColgroup = /^\\|:([^\\n+]*)\\|[\\r\\t ]*\\n/;\nconst reRowgroup = /^\\|([\\^\\-~])([^\\n+]*)\\.[ \\t\\r]*\\n/;\n\nconst charToTag = {\n  '^': 'thead',\n  '~': 'tfoot',\n  '-': 'tbody'\n};\n\nfunction parseColgroup ( src ) {\n  const colgroup = [ 'colgroup', {} ];\n  src.split( '|' )\n      .forEach( function ( s, isCol ) {\n        const col = ( isCol ) ? {} : colgroup[ 1 ];\n        let d = s.trim();\n        let m;\n        if ( d ) {\n          if ( ( m = /^\\\\(\\d+)/.exec( d ) ) ) {\n            col.span = +m[ 1 ];\n            d = d.slice( m[ 0 ].length );\n          }\n          if ( ( m = parseAttr( d, 'col' ) ) ) {\n            merge( col, m[ 1 ] );\n            d = d.slice( m[ 0 ] );\n          }\n          if ( ( m = /\\b\\d+\\b/.exec( d ) ) ) {\n            col.width = +m[0];\n          }\n        }\n        if ( isCol ) {\n          colgroup.push( '\\n\\t\\t', [ 'col', col ] );\n        }\n      });\n  return colgroup.concat( [ '\\n\\t' ] );\n}\n\nfunction testTable ( src ) {\n  return reTable.exec( src );\n}\n\nfunction parseTable ( src, options, charOffset, charPosToLine ) {\n  if ( options.showOriginalLineNumber ) {\n    const removedSrc = src.match( /^\\s+/ );\n    if ( removedSrc && removedSrc[0] ) {\n      charOffset += removedSrc[0].length;\n    }\n  }\n  src = ribbon( src.trim() );\n\n  const rowgroups = [];\n  let colgroup;\n  let caption;\n  const tAttr = {};\n  let tCurr;\n  let row;\n  let inner;\n  let pba;\n  let more;\n  let m;\n  let extended = 0;\n\n  const setRowGroup = function ( type, pba ) {\n    tCurr = [ type, pba || {} ];\n    rowgroups.push( tCurr );\n  };\n\n  if ( ( m = reHead.exec( src ) ) ) {\n    // parse and apply table attr\n    src.advance( m[0] );\n    pba = parseAttr( m[2], 'table' );\n    if ( pba ) {\n      merge( tAttr, pba[1] );\n    }\n    if ( m[3] ) {\n      tAttr.summary = m[3];\n    }\n  }\n\n  // caption\n  if ( ( m = reCaption.exec( src ) ) ) {\n    caption = [ 'caption' ];\n    if ( ( pba = parseAttr( m[1], 'caption' ) ) ) {\n      caption.push( pba[1] );\n      m[1] = m[1].slice( pba[0] );\n    }\n    if ( /\\./.test( m[1] ) ) { // mandatory \".\"\n      caption.push( m[1].slice( 1 ).replace( /\\|\\s*$/, '' ).trim() );\n      extended++;\n      src.advance( m[0] );\n    }\n    else {\n      caption = null;\n    }\n  }\n\n  do {\n    // colgroup\n    if ( ( m = reColgroup.exec( src ) ) ) {\n      colgroup = parseColgroup( m[1] );\n      extended++;\n    }\n    // \"rowgroup\" (tbody, thead, tfoot)\n    else if ( ( m = reRowgroup.exec( src ) ) ) {\n      // PHP allows any amount of these in any order\n      // and simply translates them straight through\n      // the same is done here.\n      const tag = charToTag[ m[1] ] || 'tbody';\n      pba = parseAttr( `${ m[2] } `, tag );\n      setRowGroup( tag, pba && pba[1] );\n      extended++;\n    }\n    // row\n    else if ( ( m = reRow.exec( src ) ) ) {\n      if ( !tCurr ) { setRowGroup( 'tbody' ); }\n\n      row = [ 'tr' ];\n\n      if ( m[2] && ( pba = parseAttr( m[2], 'tr' ) ) ) {\n        // FIXME: requires \"\\.\\s?\" -- else what ?\n        row.push( addLineNumber( pba[1], options, charPosToLine, charOffset, src.getPos() ) );\n      }\n      else {\n        row.push( addLineNumber({}, options, charPosToLine, charOffset, src.getPos() ) );\n      }\n\n      tCurr.push( '\\n\\t\\t', row );\n      inner = ribbon( m[3] );\n\n      do {\n        inner.save();\n\n        // cell loop\n        const th = inner.startsWith( '_' );\n        let cell = [ th ? 'th' : 'td' ];\n        if ( th ) {\n          inner.advance( 1 );\n        }\n\n        pba = parseAttr( inner, 'td' );\n        if ( pba ) {\n          inner.advance( pba[0] );\n          cell.push( pba[1] ); // FIXME: don't do this if next text fails\n        }\n\n        if ( pba || th ) {\n          const p = /^\\.\\s*/.exec( inner );\n          if ( p ) {\n            inner.advance( p[0] );\n          }\n          else {\n            cell = [ 'td' ];\n            inner.load();\n          }\n        }\n\n        const mx = /^(==.*?==|[^\\|])*/.exec( inner );\n        cell = cell.concat( parsePhrase( mx[0], options ) );\n        row.push( '\\n\\t\\t\\t', cell );\n        more = inner.valueOf().charAt( mx[0].length ) === '|';\n        inner.advance( mx[0].length + 1 );\n      }\n      while ( more );\n\n      row.push( '\\n\\t\\t' );\n    }\n    //\n    if ( m ) {\n      src.advance( m[0] );\n    }\n  }\n  while ( m );\n\n  // assemble table\n  let table = [ 'table', tAttr ];\n  if ( extended ) {\n    if ( caption ) {\n      table.push( '\\n\\t', caption );\n    }\n    if ( colgroup ) {\n      table.push( '\\n\\t', colgroup );\n    }\n    rowgroups.forEach( function ( tbody ) {\n      table.push( '\\n\\t', tbody.concat( [ '\\n\\t' ] ) );\n    });\n  }\n  else {\n    table = table.concat( reIndent( rowgroups[0].slice( 2 ), -1 ) );\n  }\n\n  table.push( '\\n' );\n  return table;\n}\n\nmodule.exports = {\n  parseColgroup: parseColgroup,\n  parseTable: parseTable,\n  testTable: testTable\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/textile/table.js"],"sourceRoot":""}